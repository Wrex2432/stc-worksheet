// pages/index.tsx

import { useState, useEffect } from "react";

type Pokemon = {
    name: string;
    image: string;
    description: string;
};

const Home = () => {
    const [pokemons, setPokemons] = useState<Pokemon[]>([]);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string>("");

    // Fetch Pokémon data from the API
    useEffect(() => {
        const fetchPokemons = async () => {
        try {
            // Fetch the list of Pokémon
            const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=10");
            const data = await response.json();

            // Fetch details of each Pokémon (including description)
            const pokemonDetails = await Promise.all(
            data.results.map(async (pokemon: { name: string; url: string }) => {
                const pokemonDataResponse = await fetch(pokemon.url);
                const pokemonData = await pokemonDataResponse.json();

                // Fetch the species data for the Pokémon to get the description
                const speciesResponse = await fetch(pokemonData.species.url);
                const speciesData = await speciesResponse.json();

                const description = speciesData.flavor_text_entries.find(
                (entry: any) => entry.language.name === "en"
                )?.flavor_text || "No description available.";

                return {
                name: pokemon.name,
                image: pokemonData.sprites.front_default,
                description: description,
                };
            })
            );

            setPokemons(pokemonDetails);
        } catch (err) {
            setError("Failed to fetch Pokémon data.");
        } finally {
            setLoading(false);
        }
        };

        fetchPokemons();
    }, []);

    if (loading) {
        return <div>Loading...</div>;
    }

    if (error) {
        return <div>{error}</div>;
    }

    return (
        <div className="pokemon-list">
        {pokemons.map((pokemon) => (
            <div className="pokemon-card" key={pokemon.name}>
            <img src={pokemon.image} alt={pokemon.name} className="pokemon-image" />
            <h2>{pokemon.name}</h2>
            <p>{pokemon.description}</p>
            </div>
        ))}

        <style jsx>{`
            .pokemon-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
            }
            .pokemon-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 20px;
            width: 250px;
            text-align: center;
            background-color: #f9f9f9;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }
            .pokemon-image {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 50%;
            }
            h2 {
            font-size: 1.5rem;
            margin: 10px 0;
            }
            p {
            color: #666;
            font-size: 1rem;
            }
        `}</style>
        </div>
    );
};

export default Home;

//https://pokeapi.co/api/v2/pokemon/5
let contenedor;
const total_pokemons = 500;

window.onload = inicio;

function aleatorio(min, max) { // min and max included 
  return Math.floor(Math.random() * (max - min + 1) + min)
}

function inicio()
{
  contenedor = document.getElementById("vitrina");
  window.addEventListener("click",pintarVitrina);
}

function pintarVitrina(evento){
  contenedor.innerHTML = "";
  traerDatos(aleatorio(1,total_pokemons));
  traerDatos(aleatorio(1,total_pokemons));
  traerDatos(aleatorio(1,total_pokemons));
  traerDatos(aleatorio(1,total_pokemons));
  traerDatos(aleatorio(1,total_pokemons));
}

function traerDatos(id){
  fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)
  .then(response => response.json())
  .then(function(data){
    let nombre = data.name;
    let url = data.sprites.other.dream_world.front_default;
    if(nombre && url)
    {
        imprimirTarjeta(nombre,url);
    }
  });
}

function imprimirTarjeta(nombre,url)
{
  let template = `<div class="tarjeta">
  <img src="${url}" alt="" >
    <br>
    <label for="">
      ${nombre}
    </label> <br>
    <a href="">Ver más...</a>
  </div>`;
  contenedor.innerHTML += template;
}